/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
       ListNode* start=new ListNode();
       start->next=head;

       ListNode *fast=start;
       ListNode *slow=start;

       for(int i=0;i<n;i++){
           fast=fast->next;//fast reaches nth node from start
       } 

       while(fast->next!=NULL){
           fast=fast->next;
           slow=slow->next;
       }
       //now slow has reached one node before the nth node

       slow->next=slow->next->next;

       return start->next;
    }
};
