/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        int size=0;
        while(head==NULL ||k==1)
        return head;

        ListNode*curr=head;
        while(curr)
        {
            size++;
            curr=curr->next;
        }
        ListNode* dummy=new ListNode(0);
        dummy->next=head;

        curr=dummy;
        ListNode*prev=dummy;
        ListNode*nex=dummy;

        while(size>=k){
            curr=prev->next;
            nex=curr->next;
            for(int i=1;i<k;i++){
                curr->next=nex->next;
                nex->next=prev->next;
                prev->next=nex;
                nex=curr->next;
            }
            prev=curr;
            size-=k;
        }
        return dummy->next;
        

    }
};
