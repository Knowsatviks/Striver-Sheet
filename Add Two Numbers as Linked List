/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* cur1=l1;
        ListNode* cur2=l2;
        ListNode*head=NULL;
        ListNode *curr=head;
        int c=0;
        while(cur1 != NULL || cur2!=NULL){
            int sum=0;
            if(cur1==NULL)
            sum=cur2->val+c;

            else if(cur2==NULL)
            sum=cur1->val+c;

            else
            sum=cur1->val+cur2->val+c;
                if(sum>9)
                {
                    c=1;
                    sum-=10;
                }
                else{
                    c=0;
                }
            if(head==NULL){
                ListNode* temp=new ListNode(sum);
                head=temp;
                curr=head;
            }
            else{
              ListNode *temp=new ListNode(sum);
            curr->next=temp;
            curr=curr->next;
            }
            if(cur1!=NULL)
            cur1=cur1->next;
            
            if(cur2!=NULL)
            cur2=cur2->next;
        }

        if(c>0)
        {
            ListNode *temp=new ListNode(c);
            curr->next=temp;
        }
        return head;
    }
};
