class Solution {
public:
    void findCombinations(int index, int target, vector<int>&candidates, vector<int>&temp, vector<vector<int>>&res){
       if(target==0)
       {
           res.push_back(temp);
           return;
       }
       for(int i=index;i<candidates.size();i++)
       {
           if(i>index && candidates[i]==candidates[i-1]){
               continue;
           }
           if(candidates[i]>target)
           break;
           
           temp.push_back(candidates[i]);
           findCombinations(i+1, target-candidates[i], candidates, temp, res);
           temp.pop_back();
       }
    }

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>>res;
        vector<int>temp;
        sort(candidates.begin(), candidates.end());
        findCombinations(0, target, candidates, temp, res);
        return res;
    }
};
