class Solution {
public:
    void subset(int index, vector<int>&nums, set<vector<int>>&s, vector<int>&temp ){
        if(index==nums.size()){
            sort(temp.begin(), temp.end());
            s.insert(temp);
            return;
        }
        //pick the index
       temp.push_back(nums[index]);
       subset(index+1, nums, s, temp);
       //not picking the index
       temp.pop_back();
       subset(index+1, nums, s, temp);
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        set<vector<int>>s;
         vector<vector<int>>res;
         vector<int>temp;
         subset(0, nums, s, temp);
        for(auto it=s.begin(); it!=s.end();it++){
            res.push_back(*it);
        }
        return res;
    }
};
